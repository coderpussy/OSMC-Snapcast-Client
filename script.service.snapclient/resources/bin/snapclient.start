#!/bin/sh
################################################################################
#      Original from LibreELEC - https://libreelec.tv
################################################################################

ADDONSETTINGS=`cat /home/osmc/.kodi/userdata/addon_data/script.service.snapclient/settings.xml`
ADDONDIR="/home/osmc/.kodi/addons/script.service.snapclient"

sc_ce=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="client_enabled"/ {print $3}')

# Exit if Snapclient is not enabled
if [ "$sc_ce" != "true" ]; then
  exit 0
fi

sc_a=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_manage_onboard_audio"/ {print $3}')
sc_h=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_hostID"/ {print $3}')
#sc_k=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_stop_if_kodi_play"/ {print $3}')
sc_l=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_latency"/ {print $3}')
sc_d=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_daemon"/ {print $3}')
sc_sa=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_host"/ {print $3}')
sc_p=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_port"/ {print $3}')
sc_r=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_onboard_audio_playback_route"/ {print $3}')
sc_s=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_soundcard"/ {print $3}')

sc_ps=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_player_settings"/ {print $3}')
sc_ps_for=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_player_settings_for"/ {print $3}')
sc_ps_bufft=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_player_settings_buffer_time"/ {print $3}')
sc_ps_frags=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_player_settings_fragments"/ {print $3}')

sc_ls=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_logsink"/ {print $3}')
sc_lf=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_enable_logfilter"/ {print $3}')
sc_lf_tag=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_logfilter_tag"/ {print $3}')
sc_lf_level=$(echo "$ADDONSETTINGS" | awk -F'[<>]' '/<setting id="sc_logfilter_level"/ {print $3}')

#case "$LIBREELEC_ARCH" in
#  RPi*.arm)
#    if [ "$sc_a" == "true" ]; then
#      ALSA="/proc/asound/ALSA"
#      if [ ! -e "$ALSA" ]; then
#        echo "Starting Raspberry Pi onboard audio"
#        dtparam audio=on
#        sleep 1
#      fi
#      if [ -e "$ALSA" ]; then
#        echo "Setting Raspberry Pi onboard audio playback route"
#        index="$(readlink $ALSA)"
#        index="${index##*card}"
#        amixer -c "$index" cset name="PCM Playback Route" "$sc_r"
#      fi
#    fi
#    ;;
#esac

[ -n "$sc_ls" ] && sc_ls="--logsink=$sc_ls"
[ -n "$sc_d" ] && sc_d="--daemon $sc_d"
[ -n "$sc_sa" ] && sc_sa="--host $sc_sa"
[ -n "$sc_h" ] && sc_h="--hostID $sc_h"
[ -n "$sc_l" ] && sc_l="--latency $sc_l"
[ -n "$sc_p" ] && sc_p="--port $sc_p"
[ -n "$sc_s" ] && sc_s="--soundcard $sc_s"

if [ "$sc_ps" = "true" ]; then
  sc_player="--player $sc_ps_for:buffer_time=$sc_ps_bufft,fragments=$sc_ps_frags"
fi

if [ "$sc_lf" = "true" ]; then
  sc_logfilter="--logfilter $sc_lf_tag:$sc_lf_level"
fi

# client start
#nice -n $sc_N \
$ADDONDIR/resources/bin/snapclient \
$sc_ls \
$sc_d \
$sc_sa \
$sc_h \
$sc_l \
$sc_p \
$sc_s \
$sc_player \
$sc_logfilter \
> /dev/null